{"version":3,"sources":["logo.svg","services/AuthService.js","components/signup/Signup.js","components/login/Login.js","components/navbar/Navbar.js","components/dropdownmenu/DropDownMenu.js","components/home/Home.js","components/county/County.js","components/surfbreak/SurfBreak.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AuthService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","login","currentUser","get","logout","axios","create","baseURL","process","withCredentials","Signup","props","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","tryToSignUp","preventDefault","uName","state","usernameInput","pWord","passwordInput","toggleForm","getUser","react_default","a","createElement","onSubmit","onChange","Component","Login","tryToLogin","Navbar","className","href","src","alt","height","width","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","theUser","onClick","index_es","icon","faUser","faUserPlus","userLogOut","faSignOutAlt","DropDownMenu","getTheCounty","formShowing","listOpen","headerTitle","title","prevState","_this2","dropDownCounties","_this$state","toggleList","faAngleUp","size","faAngleDown","map","eachCounty","i","key","React","Home","dropdownmenu_DropDownMenu","dataFromChild","County","allRegionalSurfBreaks","eachValidSurfBreak","_id","react_router_dom","to","concat","theCounty","spot_id","spot_name","displayAllRegionalSurfBreaks","SurfBreak","displayASingleSurfBreak","console","table","log","App","getCurrentlyLoggedInUser","currentlyLoggedIn","catch","whichForm","theForm","getAllRegionalSurfBreaks","theRegionalSurfBreaks","validSurfBreaks","ready","theSelectedCounty","signupShowing","loginShowing","allTheCounties","theSurfBreak","navbar_Navbar","signup_Signup","login_Login","react_router","exact","path","render","home_Home","assign","county_County","surfbreak_SurfBreak","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.31cdb27c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_AUTHSERVICE_BASE_URL,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/auth/signup', {username:username, password:password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) =>{\n    return this.service.post('/auth/login', {username, password})\n    .then(response => response.data)\n  }\n\n  currentUser = () =>{\n    return this.service.get('/auth/getcurrentuser')\n    .then(response => response.data)\n  }\n\n\n  logout = () =>{\n    return this.service.post('/auth/logout', {})\n    .then(response => response.data)\n  }\n\n\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value})\n  }\n\n  tryToSignUp = (e) =>{\n      e.preventDefault();\n      const uName = this.state.usernameInput;\n      const pWord = this.state.passwordInput;\n    \n    this.service.signup(uName, pWord)\n    .then(()=>{\n        this.props.toggleForm('signup');\n        this.props.getUser();\n    })\n\n  }\n\n  \n\n  render(){\n    return(\n      <form onSubmit = {this.tryToSignUp}>\n\n          <h3>Signup For An Account</h3>\n\n          <legend>Username</legend>\n          <input value={this.state.usernameInput}\n            name=\"usernameInput\"\n            onChange={this.handleChange}\n          />\n\n          <legend>Password</legend>\n          <input value={this.state.passwordInput} \n            name=\"passwordInput\"\n            onChange={this.handleChange}\n          />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value})\n  }\n\n  tryToLogin = (e) =>{\n      e.preventDefault();\n      const uName = this.state.usernameInput;\n      const pWord = this.state.passwordInput;\n    \n      this.service.login(uName, pWord)\n      .then(()=>{\n          this.props.toggleForm('login');\n          this.props.getUser();\n      })\n\n  }\n\n  \n\n  render(){\n    return(\n      <form onSubmit = {this.tryToLogin}>\n\n          <h3>Login</h3>\n\n          <legend>Username</legend>\n          <input value={this.state.usernameInput}\n            name=\"usernameInput\"\n            onChange={this.handleChange}\n          />\n\n          <legend>Password</legend>\n          <input value={this.state.passwordInput} \n            name=\"passwordInput\"\n            onChange={this.handleChange}\n          />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport {Link, NavLink} from 'react-router-dom';\nimport './navbar.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt, faUser, faUserPlus } from '@fortawesome/free-solid-svg-icons'\n\n\n\nfunction Navbar(props){\n\n    const logoutNow = () =>{\n        props.userLogOut()\n        .then(()=>{\n            props.getUser();\n        })\n\n    }\n\n\nreturn(\n    // <nav className=\"navbar navbar-expand navbar-dark bg-primary\">\n    <nav className=\"navbar navbar-expand navbar-custom bg-custom py-0\">\n        <a className=\"navbar-brand\" href=\"#\">\n            <img src=\"/images/sarfcastlogo.png\" alt=\"sarfcast brand logo\" height=\"42\" width=\"42\"/>\n            SarfCast\n        </a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Profile</a>\n                </li>\n            </ul>\n        </div>\n\n        <div className=\"right-nav-links\">\n            <ul className=\"navbar-nav\">\n            \n             {/*             \n            {props.theUser && \n                <Link to=\"/region\" style={{ textDecoration: 'none', margin: '10px' }}>Region</Link>\n             } */}\n\n\n            {!props.theUser && \n            <span>\n            <button className=\"btn btn-custom ml-3 my-2\" onClick = {()=> props.toggleForm('login')} > Login <FontAwesomeIcon icon={faUser}/></button>\n            <button className=\"btn btn-custom ml-3 my-2\" onClick = {()=> props.toggleForm('signup')}>Sign Up <FontAwesomeIcon icon={faUserPlus}/></button>\n            </span>\n            }\n\n            {props.theUser && \n            <span>\n\n            <button className=\"btn btn-custom\" onClick = {logoutNow} >Log Out <FontAwesomeIcon icon={faSignOutAlt}/></button>\n\n                <span>Hello, {props.theUser.username}</span>\n            </span>\n            }\n            </ul>\n        </div>\n    </nav>\n\n)\n\n\n\n}\n\nexport default Navbar;","import React from 'react';\nimport './dropdownmenu.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n \n\n// create our App\n\n\n\nclass DropDownMenu extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title,\n    }\n  }\n\n  handleClickOutside(){\n    this.setState({\n      listOpen: false\n    })\n  }\n\n  toggleList(){\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }))\n  }\n\n  getTheCounty = () =>{\n    this.setState({formShowing: !this.state.formShowing})\n  }\n\n  render(){\n    const{dropDownCounties} = this.props\n    const{listOpen, headerTitle} = this.state\n    return(\n      <div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n          <div className=\"dd-header-title\">\n          {headerTitle} \n          {listOpen\n            ? <FontAwesomeIcon icon={faAngleUp} size=\"2x\"/>\n            : <FontAwesomeIcon icon={faAngleDown} size=\"2x\"/>\n          }</div>\n          \n      </div>\n      {listOpen && <ul className=\"dd-list\">\n         {dropDownCounties.map((eachCounty,i) => (\n          //  <li className=\"dd-list-item\" key={item.id}>{item.title}</li>\n          <li className=\"dd-list-item\" key={i} onClick = {this.getTheCounty}>{eachCounty}</li>\n          ))}\n      </ul>}\n      </div>\n    )\n  }\n}\n\n  // updateQty = (e) =>{\n  //   this.setState({quantity: e.target.value})\n  // }\n  \n//   render(){\n//     return(\n//       <div className=\"dd-wrapper\">\n//         <div className=\"dd-header\">\n//           <div className=\"dd-header-title\"></div>\n//         </div>\n//         <ul className=\"dd-list\">\n//           <li className=\"dd-list-item\"></li>\n//           <li className=\"dd-list-item\"></li>\n//           <li className=\"dd-list-item\"></li>\n//         </ul>\n//       </div>\n\n//     )\n\n//   }\n\n\n\n// }\n\n\nexport default DropDownMenu;","import React, { Component } from 'react';\nimport \"./home.css\"\nimport DropDownMenu from '../dropdownmenu/DropDownMenu'\n// import axios from 'axios';\n\nclass Home extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      //ENTER STUFF HERE\n    };\n\n  }\n\n  // MAYBE A FUNCTION HERE\n\n\n  render(){\n    return(\n      <div>\n        <h1>Welcome to the Home Page</h1>\n\n        <div>\n        <DropDownMenu\n          title=\"Select County\"\n          dropDownCounties={this.props.dropDownCounties}\n          dataFromChild = {this.dataFromChild} \n        />\n        </div>\n\n\n\n\n        <div className=\"ocean\">\n          <div className=\"wave\"></div>\n          <div className=\"wave\"></div>\n        </div>\n\n\n      </div>\n    )\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\n// import axios from 'axios';\nimport { Link } from 'react-router-dom'\n// import SurfBreak from '../surfbreak/SurfBreak'\n\nclass County extends Component {\n\n  displayAllRegionalSurfBreaks () {\n    return this.props.allRegionalSurfBreaks.map((eachValidSurfBreak)=>{\n        return(\n          <div key={eachValidSurfBreak._id}>\n            {/* <div>\n               {eachValidSurfBreak.spot_name}\n            </div> */}\n            <Link to = {`/region/${this.props.theCounty}/${eachValidSurfBreak.spot_id}`}>\n               {eachValidSurfBreak.spot_name}\n            </Link>\n\n\n          </div> \n      )\n    })\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <h1>All The SurfBreaks for {this.props.theCounty}:</h1>\n        \n        {this.displayAllRegionalSurfBreaks()}\n  \n      </div>\n    );\n  }\n}\n\nexport default County;","import React, { Component } from 'react';\n// import axios from 'axios';\n\nclass SurfBreak extends Component {\n  \n\n  // MAYBE A FUNCTION HERE\n  displayASingleSurfBreak = () =>{\n    console.table(this.props.allRegionalSurfBreaks);\n    console.log(this.props.allRegionalSurfBreaks);\n  }\n\n  render(){\n    return(\n      <div>\n        <h1>Welcome to the Detailed surf break page</h1>\n        {this.displayASingleSurfBreak()}\n      </div>\n    )\n  }\n}\n\nexport default SurfBreak;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Route, Link, Switch} from 'react-router-dom';\n//Auth Components\nimport Signup from './components/signup/Signup.js';\nimport Login from './components/login/Login.js';\nimport AuthService from './services/AuthService.js';\n//Nav Component\nimport Navbar from './components/navbar/Navbar.js'\n//Other Components\nimport Home from './components/home/Home'\nimport County from './components/county/County'\nimport SurfBreak from './components/surfbreak/SurfBreak'\n\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = { \n      currentlyLoggedIn: null,\n      signupShowing: false,\n      loginShowing: false,\n      //For Search Bar\n      allTheCounties: [\"Marin\", \"San Francisco\", \"Monterey\", \"Santa Cruz\",\"San Mateo\",\"Los Angeles\",\"San Luis Obispo\",\"Santa Barbara\",\"San Diego\",\"Orange County\",\"Ventura\"],\n      dropDownCounties: [\"Marin\", \"San Francisco\", \"Monterey\", \"Santa Cruz\",\"San Mateo\",\"Los Angeles\",\"San Luis Obispo\",\"Santa Barbara\",\"San Diego\",\"Orange County\",\"Ventura\"],\n      // listOpen: false,\n      // headerTitle: \"Select location\"\n\n      // Passed down to County Component\n      theCounty: \"Monterey\",\n      validSurfBreaks: [],\n      // Passed down to SurfBreak Component\n      theSurfBreak: \"Carmel Beach\",\n      //To handle loading\n      ready: false,\n\n   };\n\n   this.service = new AuthService();\n  \n  }\n\n\ngetCurrentlyLoggedInUser = () =>{\n  this.service.currentUser()\n  .then((theUser)=>{\n    this.setState({currentlyLoggedIn: theUser})\n  })\n  .catch(()=>{\n    this.setState({currentlyLoggedIn: null})\n  })\n}\n\n\ntoggleForm = (whichForm) =>{\n\n  let theForm;\n\n  if(whichForm === \"signup\"){\n    theForm = 'signupShowing'\n  } else {\n    theForm = 'loginShowing'\n  }\n\n  this.setState({[theForm]: !this.state[theForm]})\n}\n\n\ngetAllRegionalSurfBreaks = () => {\n  axios.get(`${process.env.REACT_APP_BASE}/region/${this.state.theCounty}`)\n  .then((theRegionalSurfBreaks)=>{\n    this.setState({\n      validSurfBreaks: theRegionalSurfBreaks.data,\n      ready: true,\n    })\n    console.log(this.state.validSurfBreaks);\n  })\n}\n\n// showDropDown = () => {\n//   // return this.state.dropDownCounties.map((eachCounty, i)=>{\n//     return <DropDownMenu key={i}\n//      title=\"Select County\"\n//      list={this.state.dropDownCounties}\n//     />\n//   // })\n// }\n\n// toggleSelectedCounty(id, key){\n//   let temp = this.state[key]\n//   temp[id].selected = !temp[id].selected\n//   this.setState({\n//     [key]: temp\n//   })\n// }\n\ndataFromChild = (data) => {\n  // console.log(data);\n  let  theSelectedCounty= data;\n\n  this.setState({theCounty: theSelectedCounty})\n}\n\n\n\n\n  componentDidMount() {\n    this.getCurrentlyLoggedInUser();\n    this.getAllRegionalSurfBreaks();\n  }\n\n\nrender(){\n\n  console.log('This is my state',this.state);\n\n\n    return (\n      <div>\n\n\n      <Navbar \n      theUser = {this.state.currentlyLoggedIn} \n      userLogOut = {()=> this.service.logout()}\n      toggleForm = {this.toggleForm}\n      getUser = {this.getCurrentlyLoggedInUser}\n      \n      />\n\n      {this.state.signupShowing && \n        <Signup getUser = {this.getCurrentlyLoggedInUser}\n        toggleForm = {this.toggleForm}\n         />\n      }\n\n      {this.state.loginShowing && \n        <Login getUser = {this.getCurrentlyLoggedInUser}\n        toggleForm = {this.toggleForm}\n        />\n      }\n\n<Switch>\n\n \n         \n          <Route exact path=\"/\"\n          render ={(props)=> <Home\n             {...props} \n             theCounty = {this.state.theCounty}\n             allTheCounties = {this.state.allTheCounties}\n             dropDownCounties = {this.state.dropDownCounties}\n             ready = {this.state.ready}\n             dataFromChild = {this.dataFromChild} \n           />} \n          />\n\n\n          <Route exact path=\"/region/:region\"\n          render ={(props)=> <County\n             {...props} \n             allRegionalSurfBreaks ={ this.state.validSurfBreaks}\n             theCounty = {this.state.theCounty}\n             ready = {this.state.ready}\n            \n           />} \n          />\n\n<Route exact path={`/region/${this.state.theCounty}/:spotID`}\n          render ={(props)=> <SurfBreak\n             {...props} \n             allRegionalSurfBreaks ={ this.state.validSurfBreaks}\n             theCounty = {this.state.theCounty}\n             ready = {this.state.ready}\n\n           />} \n          />\n\n        </Switch>\n\n\n      \n    \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}