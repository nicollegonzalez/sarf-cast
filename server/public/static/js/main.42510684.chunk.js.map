{"version":3,"sources":["logo.svg","services/AuthService.js","components/signup/Signup.js","components/login/Login.js","components/navbar/Navbar.js","components/dropdownmenu/DropDownMenu.js","components/home/Home.js","components/county/County.js","components/surfbreak/SurfBreak.js","components/profile/Profile.js","components/editprofile/EditProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AuthService","_this","this","Object","classCallCheck","signup","username","password","stanceInput","favoriteSurfSpotInput","favoriteSurfBoardShapeInput","favoriteSurferInput","service","post","then","response","data","login","currentUser","get","logout","axios","create","baseURL","process","withCredentials","Signup","props","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","tryToSignUp","preventDefault","uName","state","usernameInput","pWord","passwordInput","stance","favoriteSurfSpot","favoriteSurfSurfBoardShape","favoriteSurfSurfBoardShapeInput","favoriteSurfer","toggleForm","getUser","react_default","a","createElement","onSubmit","className","onChange","Component","Login","tryToLogin","Navbar","react_router_dom","to","href","src","alt","height","width","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","theUser","onClick","index_es","icon","faUser","faUserPlus","userLogOut","faSignOutAlt","DropDownMenu","listOpen","headerTitle","title","prevState","county","console","log","innerHTML","dataFromChild","history","push","concat","_this2","dropDownCounties","_this$state","toggleList","faAngleUp","size","faAngleDown","map","eachCounty","i","key","handleCountyNameClick","React","Home","dropdownmenu_DropDownMenu","assign","getAllRegionalSurfBreaks","County","allRegionalSurfBreaks","eachValidSurfBreak","_id","theCounty","spot_id","spot_name","displayAllRegionalSurfBreaks","SurfBreak","displayASingleSurfBreak","table","Profile","deleteUser","delete","catch","err","ready","require","App","goHome","currentlyLoggedIn","getCurrentlyLoggedInUser","whichForm","theForm","theRegionalSurfBreaks","validSurfBreaks","_ref","asyncToGenerator","regenerator_default","mark","_callee","theSelectedCounty","wrap","_context","prev","next","stop","_x","apply","arguments","signupShowing","loginShowing","allTheCounties","theSurfBreak","navbar_Navbar","signup_Signup","login_Login","profileShowing","profile_Profile","react_router","exact","path","render","home_Home","county_County","surfbreak_SurfBreak","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.42510684.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_AUTHSERVICE_BASE_URL,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (username, password, stanceInput,favoriteSurfSpotInput,favoriteSurfBoardShapeInput,favoriteSurferInput) => {\n    return this.service.post('/auth/signup', {username:username, password:password, stanceInput:stanceInput, favoriteSurfSpotInput:favoriteSurfSpotInput,favoriteSurfBoardShapeInput:favoriteSurfBoardShapeInput, favoriteSurferInput: favoriteSurferInput })\n    .then(response => response.data)\n  }\n\n  login = (username, password) =>{\n    return this.service.post('/auth/login', {username, password})\n    .then(response => response.data)\n  }\n\n  currentUser = () =>{\n    return this.service.get('/auth/getcurrentuser')\n    .then(response => response.data)\n  }\n\n\n  logout = () =>{\n    return this.service.post('/auth/logout', {})\n    .then(response => response.data)\n  }\n\n\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport './signup.css'\nimport AuthService from '../../services/AuthService';\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      usernameInput: '', \n      passwordInput: '',\n      stanceInput: '',\n      favoriteSurfSpotInput: '',\n      favoriteSurfSurfBoardShapeInput: '',\n      favoriteSurferInput: '',\n    };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value})\n  }\n\n  tryToSignUp = (e) =>{\n      e.preventDefault();\n      const uName = this.state.usernameInput;\n      const pWord = this.state.passwordInput;\n      const stance = this.state.stanceInput;\n      const favoriteSurfSpot = this.state.favoriteSurfSpotInput;\n      const favoriteSurfSurfBoardShape = this.state.favoriteSurfSurfBoardShapeInput;\n      const favoriteSurfer = this.state.favoriteSurferInput;\n\n    \n    this.service.signup(uName, pWord,stance,favoriteSurfSpot,favoriteSurfSurfBoardShape,favoriteSurfer,favoriteSurfer)\n    .then(()=>{\n        this.props.toggleForm('signup');\n        this.props.getUser();\n    })\n\n  }\n\n  \n\n  render(){\n    return(\n      <form onSubmit = {this.tryToSignUp}>\n\n          <div className=\"container\">\n            <h3>Signup For An Account</h3>\n\n            <div className=\"signup-container\">\n              <div className=\"left-signup\">\n                <legend>Username:</legend>\n                <input value={this.state.usernameInput}\n                  name=\"usernameInput\"\n                  onChange={this.handleChange}\n                />\n\n                <legend>Password:</legend>\n                <input value={this.state.passwordInput} \n                  name=\"passwordInput\"\n                  onChange={this.handleChange}\n                />\n\n                <legend>Riding Stance:</legend>\n                <input value={this.state.stanceInput}\n                  name=\"stanceInput\"\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              <div className=\"right-signup\">\n                <legend>Local Surf Break:</legend>\n                <input value={this.state.favoriteSurfSpotInput}\n                  name=\"favoriteSurfSpotInput\"\n                  onChange={this.handleChange}\n                />\n\n                <legend>Board Shape:</legend>\n                <input value={this.state.favoriteSurfSurfBoardShapeInput}\n                  name=\"favoriteSurfSurfBoardShapeInput\"\n                  onChange={this.handleChange}\n                />\n\n                <legend>Favorite Surfer:</legend>\n                <input value={this.state.favoriteSurferInput}\n                  name=\"favoriteSurferInput\"\n                  onChange={this.handleChange}\n                />\n              </div>\n\n               <button className=\"btn btn-outline-info\">Submit</button>\n            </div>\n\n            \n\n         \n\n            \n          </div> \n\n          \n\n\n\n        \n\n      </form>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value})\n  }\n\n  tryToLogin = (e) =>{\n      e.preventDefault();\n      const uName = this.state.usernameInput;\n      const pWord = this.state.passwordInput;\n    \n      this.service.login(uName, pWord)\n      .then(()=>{\n          this.props.toggleForm('login');\n          this.props.getUser();\n      })\n\n  }\n\n  \n\n  render(){\n    return(\n      <form onSubmit = {this.tryToLogin}>\n\n          <h3>Login</h3>\n\n          <legend>Username</legend>\n          <input value={this.state.usernameInput}\n            name=\"usernameInput\"\n            onChange={this.handleChange}\n          />\n\n          <legend>Password</legend>\n          <input value={this.state.passwordInput} \n            name=\"passwordInput\"\n            onChange={this.handleChange}\n          />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport {Link, NavLink} from 'react-router-dom';\nimport './navbar.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt, faUser, faUserPlus } from '@fortawesome/free-solid-svg-icons'\n\n\n\nfunction Navbar(props){\n\n    const logoutNow = () =>{\n        props.userLogOut()\n        .then(()=>{\n            props.getUser();\n        })\n    }\n\n\nreturn(\n    // <nav className=\"navbar navbar-expand navbar-dark bg-primary\">\n    <nav className=\"navbar navbar-expand navbar-custom bg-custom py-0\">\n        <NavLink to=\"/\" className=\"navbar-brand\" href=\"#\">\n            <img src=\"/images/sarfcastlogo.png\" alt=\"sarfcast brand logo\" height=\"42\" width=\"42\"/>\n            {/* <img src=\"/../client/build/index.html\" alt=\"sarfcast brand logo\" height=\"42\" width=\"42\"/> */}\n            SarfCast\n        </NavLink>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                    <NavLink to=\"/\" className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink to=\"/\" className=\"nav-link\" href=\"#\">Profile</NavLink>\n                </li>\n            </ul>\n        </div>\n\n        <div className=\"right-nav-links\">\n            <ul className=\"navbar-nav\">\n            \n             {/*             \n            {props.theUser && \n                <Link to=\"/region\" style={{ textDecoration: 'none', margin: '10px' }}>Region</Link>\n             } */}\n\n\n            {!props.theUser && \n            <span>\n            <button className=\"btn btn-custom ml-3 my-2\" onClick = {()=> props.toggleForm('login')} > Login <FontAwesomeIcon icon={faUser}/></button>\n            <button className=\"btn btn-custom ml-3 my-2\" onClick = {()=> props.toggleForm('signup')}>Sign Up <FontAwesomeIcon icon={faUserPlus}/></button>\n            </span>\n            }\n\n            {props.theUser && \n            <span>\n            \n            <button className=\"btn btn-custom ml-3 my-2\" onClick = {()=> props.toggleForm('profile')} >{props.theUser.username}</button>\n            <button className=\"btn btn-custom ml-3 my-2\" onClick = {logoutNow} >Log Out <FontAwesomeIcon icon={faSignOutAlt}/></button>\n\n\n                <span>Hello, {props.theUser.username}</span>\n            </span>\n            }\n            </ul>\n        </div>\n    </nav>\n\n)\n\n\n\n}\n\nexport default Navbar;","import React from 'react';\nimport './dropdownmenu.css'\nimport {Link} from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n \n\n// create our App\n\n\n\nclass DropDownMenu extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title,\n    }\n  }\n\n  handleClickOutside(){\n    this.setState({\n      listOpen: false\n    })\n  }\n\n  toggleList(){\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }))\n  }\n\n  handleCountyNameClick(e, county){\n    console.log(\"+_+_+_+_+_+_+_\",e.target.innerHTML);\n    console.log(\"HEYYYYYYYYYYY\",this.props)\n    this.props.dataFromChild(e.target.innerHTML);\n\n    this.props.history.push(`/region/${county}`)\n  }\n\n  \n\n\n\n  render(){\n    // const{dropDownCounties} = this.props\n    const dropDownCounties = this.props.dropDownCounties\n    const{listOpen, headerTitle} = this.state\n    // console.log(this.props.dropDownCounties);\n    // console.table(this.props.dropDownCounties);\n    return(\n      <div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n          <div className=\"dd-header-title\">\n          {headerTitle} \n          {listOpen\n            ? <FontAwesomeIcon icon={faAngleUp} size=\"2x\"/>\n            : <FontAwesomeIcon icon={faAngleDown} size=\"2x\"/>\n          }</div>\n          \n      </div>\n      {listOpen && <ul className=\"dd-list\">\n        {dropDownCounties.map((eachCounty,i) => (\n            <li key={i} className=\"dd-list-item dropdown-link\" onClick = {e => this.handleCountyNameClick(e, eachCounty)}>\n              {eachCounty}\n            </li>\n          ))}\n      </ul>}\n      </div>  \n    )\n  }\n}\n\n  // updateQty = (e) =>{\n  //   this.setState({quantity: e.target.value})\n  // }\n  \n//   render(){\n//     return(\n//       <div className=\"dd-wrapper\">\n//         <div className=\"dd-header\">\n//           <div className=\"dd-header-title\"></div>\n//         </div>\n//         <ul className=\"dd-list\">\n//           <li className=\"dd-list-item\"></li>\n//           <li className=\"dd-list-item\"></li>\n//           <li className=\"dd-list-item\"></li>\n//         </ul>\n//       </div>\n\n//     )\n\n//   }\n\n\n\n// }\n\n\nexport default DropDownMenu;","import React, { Component } from 'react';\nimport \"./home.css\"\nimport DropDownMenu from '../dropdownmenu/DropDownMenu'\n// import axios from 'axios';\n\nclass Home extends Component {\n  constructor(props){\n    super(props);\n    this.state = { \n      //ENTER STUFF HERE\n    };\n\n  }\n\n  // MAYBE A FUNCTION HERE\n\n\n  render(){\n    console.log(\"history---- \",this.props);\n    \n    return(\n      <div className=\"home-component\">\n        <div>\n\n\n          <div>\n            <DropDownMenu\n              {...this.props}\n              title=\"Select County\"\n              dropDownCounties={this.props.dropDownCounties}\n              getAllRegionalSurfBreaks={this.props.getAllRegionalSurfBreaks}\n              dataFromChild = {this.props.dataFromChild} \n            />\n          </div>\n\n\n          <div className=\"ocean\">\n            <div className=\"wave\"></div>\n            <div className=\"wave\"></div>\n          </div>\n        </div>\n      </div>\n      \n    )\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\n// import axios from 'axios';\nimport { Link } from 'react-router-dom'\n// import SurfBreak from '../surfbreak/SurfBreak'\n\nclass County extends Component {\n\n  displayAllRegionalSurfBreaks () {\n    console.log(\"theeeeesee  are the props ----------- \", this.props);\n    console.log(\"HHmhmhmhmh\",this.props.allRegionalSurfBreaks)\n    return this.props.allRegionalSurfBreaks.map((eachValidSurfBreak)=>{\n        return(\n          <div key={eachValidSurfBreak._id}>\n            {/* <div>\n               {eachValidSurfBreak.spot_name}\n            </div> */}\n            <Link to = {`/region/${this.props.theCounty}/${eachValidSurfBreak.spot_id}`}>\n               {eachValidSurfBreak.spot_name}\n            </Link>\n\n\n          </div> \n      )\n    })\n  }\n\n\n\n  render() {\n    console.log(\"the county props. . . . . . . .. ... . . . . . . . . ..  \", this.props)\n    \n    if(this.props.theCounty && this.props.allRegionalSurfBreaks)\n    return (\n      <div>\n        {/* <h1>All The SurfBreaks for {this.props.theCounty}:</h1> */}\n        <h1>All The SurfBreaks for {this.props.theCounty}:</h1>\n        \n        {this.displayAllRegionalSurfBreaks()}\n  \n      </div>\n    )\n    else \n    return(<h1>loading...</h1>)\n  }\n}\n\nexport default County;","import React, { Component } from 'react';\n// import axios from 'axios';\n\nclass SurfBreak extends Component {\n  \n\n  // MAYBE A FUNCTION HERE\n  displayASingleSurfBreak = () =>{\n    console.table(this.props.allRegionalSurfBreaks);\n    console.log(this.props.allRegionalSurfBreaks);\n  }\n\n  render(){\n    return(\n      <div>\n        <h1>Welcome to the Detailed surf break page</h1>\n        {this.displayASingleSurfBreak()}\n      </div>\n    )\n  }\n}\n\nexport default SurfBreak;","import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nclass Profile extends Component {\n \n\n  deleteUser = (theUser) =>{\n\n\n    axios.delete(`http://localhost:5000/api/auth/${theUser}`)\n    .then(()=>{\n        // this.props.goHome();\n    })\n    .catch((err)=>{\n        console.log(err)\n    })\n  }\n\n  \n\n  render(){\n\n\n    // console.log(this.props)\n    // if(this.props.getUser()){\n    // const theUser = this.props.currentlyLoggedIn;\n    // console.log(\"<><><><><><><><><\",theUser);\n    if(this.props.ready){\n      const theUser = this.props.theUser;\n      console.log(\"<><><><><><><><><\",theUser);\n        return(\n          <div>\n            <button onClick = {()=>{this.deleteUser(theUser.username)}}>Delete User Profile</button>\n          </div>\n        )  \n    }\n    else {\n\n      return(<h1>Loading ...</h1>)\n    }\n  }\n\n}\n    \n    \n  \n\n  export default Profile;","import React, { Component } from 'react';\nconst axios = require('axios');\n\n\nclass EditProfile extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      stanceInput: '',\n      favoriteSurfSpotInput: '',\n      favoriteSurfBoardShapeInput: '',\n      favoriteSurferInput: '',\n    }\n  }\n\n  handleFormSubmit = (event) => {\n    const stance = this.state.stanceInput;\n    const favoriteSurfSpot = this.state.favoriteSurfSpotInput;\n    const favoriteSurfBoardShape = this.state.favoriteSurfSurfBoardShapeInput;\n    const favoriteSurfer = this.state.favoriteSurferInput;\n\n    event.preventDefault();\n\n    axios.post(`http://localhost:5000/api/auth/update/${this.props.currentlyLoggedIn.username}`,\n     { theStance: stance,\n      theFavoriteSurfSpot: favoriteSurfSpot,\n      theFavoriteSurfSurfBoardShape: favoriteSurfBoardShape,\n      theFavoriteSurferInput: favoriteSurfer\n         })\n    .then( () => {\n      console.log(\"I AM INSIDE THE .then\")\n        // this.props.getAllTheProjectsInAppJS(); //WTF is this\n        // this.props.resetEditingSituation();\n    })\n    .catch( error => console.log(error) )\n  }\n\n  handleChange = (event) => {  \n    this.setState({\n      [event.target.name]:event.target.value\n    })\n  }\n\n\n\n  \n\n  render(){\n    console.log(\"99999999999999999999999\",this.props);\n    return(\n      <form onSubmit = {this.handleFormSubmit}>\n\n          <div className=\"container\">\n            <h3>Edit Account</h3>\n\n            <div className=\"signup-container\">\n              <div className=\"left-signup\">\n                <legend>Riding Stance:</legend>\n                <input value={this.state.stanceInput}\n                  name=\"stanceInput\"\n                  onChange={this.handleChange}\n                />\n\n              <legend>Local Surf Break:</legend>\n                <input value={this.state.favoriteSurfSpotInput}\n                  name=\"favoriteSurfSpotInput\"\n                  onChange={this.handleChange}\n                />\n\n\n              </div>\n\n              <div className=\"right-signup\">\n                <legend>Board Shape:</legend>\n                <input value={this.state.favoriteSurfSurfBoardShapeInput}\n                  name=\"favoriteSurfSurfBoardShapeInput\"\n                  onChange={this.handleChange}\n                />\n\n                <legend>Favorite Surfer:</legend>\n                <input value={this.state.favoriteSurferInput}\n                  name=\"favoriteSurferInput\"\n                  onChange={this.handleChange}\n                />\n              </div>\n\n               <button className=\"btn btn-outline-info\">Submit</button>\n            </div>\n\n            \n\n         \n\n            \n          </div> \n\n          \n\n\n\n        \n\n      </form>\n    )\n  }\n}\n\nexport default EditProfile;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Route, Link, Switch} from 'react-router-dom';\n//Auth Components\nimport Signup from './components/signup/Signup.js';\nimport Login from './components/login/Login.js';\nimport AuthService from './services/AuthService.js';\n//Nav Component\nimport Navbar from './components/navbar/Navbar.js'\n//Other Components\nimport Home from './components/home/Home'\nimport County from './components/county/County'\nimport SurfBreak from './components/surfbreak/SurfBreak'\nimport Profile from './components/profile/Profile'\nimport EditProfile from './components/editprofile/EditProfile'\n\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = { \n      //For user stuff\n      currentlyLoggedIn: null,\n      signupShowing: false,\n      loginShowing: false,\n      //For Search Bar\n      allTheCounties: [\"Marin\", \"San Francisco\", \"Monterey\", \"Santa Cruz\",\"San Mateo\",\"Los Angeles\",\"San Luis Obispo\",\"Santa Barbara\",\"San Diego\",\"Orange County\",\"Ventura\"],\n      dropDownCounties: [\"Marin\", \"San Francisco\", \"Monterey\", \"Santa Cruz\",\"San Mateo\",\"Los Angeles\",\"San Luis Obispo\",\"Santa Barbara\",\"San Diego\",\"Orange County\",\"Ventura\"],\n      // listOpen: false,\n      // headerTitle: \"Select location\"\n\n      // Passed down to County Component\n      theCounty: \"\",\n      validSurfBreaks: [],\n      // Passed down to SurfBreak Component\n      theSurfBreak: \"\",\n      //To handle loading\n      ready: false,\n\n   };\n\n   this.service = new AuthService();\n  \n  }\n\n  goHome = () =>{\n    axios.get(`http://localhost:5000`, {withCredentials: true})\n    .then((response)=>{\n      this.setState({currentlyLoggedIn: null})\n    })\n    .catch((err)=>{\n      console.log(err)\n    })\n      \n      \n  }\n    \n\n\ngetCurrentlyLoggedInUser = () =>{\n  this.service.currentUser()\n  .then((theUser)=>{\n    console.log(theUser);\n    this.setState({currentlyLoggedIn: theUser, ready: true})\n\n  })\n  .catch(()=>{\n    this.setState({currentlyLoggedIn: null})\n  })\n}\n\n\ntoggleForm = (whichForm) =>{\n\n  let theForm;\n\n  if(whichForm === \"signup\"){\n    theForm = 'signupShowing'\n  } else if(whichForm === \"login\"){\n    theForm = 'loginShowing'\n  } else if(whichForm === \"profile\"){\n    theForm = 'profileShowing'\n  }\n\n  this.setState({[theForm]: !this.state[theForm]})\n}\n\n\ngetAllRegionalSurfBreaks = () => {\n  console.log(\"show me the county >>>>>>>>>>>>>>>>>>>>>>>>>>>>> \", this.state);\n  axios.get(`${process.env.REACT_APP_BASE}/region/${this.state.theCounty}`)\n  .then((theRegionalSurfBreaks)=>{\n    console.log(\"*************\", typeof(theRegionalSurfBreaks.data))\n    \n    if(typeof(theRegionalSurfBreaks.data) === \"object\") {\n      console.log(\"the if condition <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< \", typeof(theRegionalSurfBreaks.data), this.state)\n      this.setState({\n        validSurfBreaks: theRegionalSurfBreaks.data,\n        // ready: true,\n      })\n    } \n\n    console.log(this.state.validSurfBreaks);\n  })\n  .catch((err)=>{\n    console.log(err);\n  })\n}\n\n\ndataFromChild = async (data) => {\n  console.log(data);\n  let  theSelectedCounty= data;\n\n  await this.setState({theCounty: theSelectedCounty})\n\n  this.getAllRegionalSurfBreaks()\n\n\n}\n\n\n\n\n  componentDidMount() {\n    this.getCurrentlyLoggedInUser();\n    this.getAllRegionalSurfBreaks();\n  }\n\n\nrender(){\n\n\n\n  console.log('This is my state :::::::::::::::::::::::::::::::::::::: ',this.state);\n\n\n    return (\n      <div>\n\n\n      <Navbar \n      theUser = {this.state.currentlyLoggedIn} \n      userLogOut = {()=> this.service.logout()}\n      toggleForm = {this.toggleForm}\n      getUser = {this.getCurrentlyLoggedInUser}\n      \n      />\n\n      {this.state.signupShowing && \n        <Signup getUser = {this.getCurrentlyLoggedInUser}\n        toggleForm = {this.toggleForm}\n         />\n      }\n\n      {this.state.loginShowing && \n        <Login getUser = {this.getCurrentlyLoggedInUser}\n        toggleForm = {this.toggleForm}\n        />\n      }\n\n      {this.state.profileShowing && \n        <Profile theUser = {this.state.currentlyLoggedIn}\n        toggleForm = {this.toggleForm}\n        goHome = {this.goHome}\n        ready = {this.state.ready}\n        />\n        // <EditProfile getUser = {this.getCurrentlyLoggedInUser}\n        // toggleForm = {this.toggleForm}\n        // currentlyLoggedIn = {this.state.currentlyLoggedIn}\n        // />\n        // <EditProfile getUser = {this.getCurrentlyLoggedInUser}\n        // toggleForm = {this.toggleForm}\n        // currentlyLoggedIn = {this.state.currentlyLoggedIn}\n        // />\n      }\n\n<Switch>\n\n \n         \n          <Route exact path=\"/\"\n          render ={(props)=> <Home\n             {...props} \n             theCounty = {this.state.theCounty}\n             allTheCounties = {this.state.allTheCounties}\n             dropDownCounties = {this.state.dropDownCounties}\n             ready = {this.state.ready}\n             getAllRegionalSurfBreaks = {this.getAllRegionalSurfBreaks}\n             dataFromChild = {this.dataFromChild} \n           />} \n          />\n\n\n          <Route exact path=\"/region/:region\"\n          render ={(props)=> <County\n             {...props} \n             allRegionalSurfBreaks ={ this.state.validSurfBreaks}\n             theCounty = {this.state.theCounty}\n             ready = {this.state.ready}\n            \n           />} \n          />\n\n          <Route exact path={`/region/${this.state.theCounty}/:spotID`}\n          render ={(props)=> <SurfBreak\n             {...props} \n             allRegionalSurfBreaks ={ this.state.validSurfBreaks}\n             theCounty = {this.state.theCounty}\n             ready = {this.state.ready}\n\n           />} \n          />\n\n        </Switch>\n\n\n      \n    \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}